/****************************************************************************
** Meta object code from reading C++ file 'VideoDecoderFFmpeg.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.3.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'VideoDecoderFFmpeg.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.3.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_QtAV__VideoDecoderFFmpeg_t {
    QByteArrayData data[46];
    char stringdata[421];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_QtAV__VideoDecoderFFmpeg_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_QtAV__VideoDecoderFFmpeg_t qt_meta_stringdata_QtAV__VideoDecoderFFmpeg = {
    {
QT_MOC_LITERAL(0, 0, 24),
QT_MOC_LITERAL(1, 25, 16),
QT_MOC_LITERAL(2, 42, 11),
QT_MOC_LITERAL(3, 54, 9),
QT_MOC_LITERAL(4, 64, 10),
QT_MOC_LITERAL(5, 75, 7),
QT_MOC_LITERAL(6, 83, 11),
QT_MOC_LITERAL(7, 95, 11),
QT_MOC_LITERAL(8, 107, 5),
QT_MOC_LITERAL(9, 113, 20),
QT_MOC_LITERAL(10, 134, 10),
QT_MOC_LITERAL(11, 145, 4),
QT_MOC_LITERAL(12, 150, 6),
QT_MOC_LITERAL(13, 157, 6),
QT_MOC_LITERAL(14, 164, 10),
QT_MOC_LITERAL(15, 175, 12),
QT_MOC_LITERAL(16, 188, 4),
QT_MOC_LITERAL(17, 193, 7),
QT_MOC_LITERAL(18, 201, 5),
QT_MOC_LITERAL(19, 207, 5),
QT_MOC_LITERAL(20, 213, 5),
QT_MOC_LITERAL(21, 219, 3),
QT_MOC_LITERAL(22, 223, 10),
QT_MOC_LITERAL(23, 234, 11),
QT_MOC_LITERAL(24, 246, 5),
QT_MOC_LITERAL(25, 252, 5),
QT_MOC_LITERAL(26, 258, 19),
QT_MOC_LITERAL(27, 278, 2),
QT_MOC_LITERAL(28, 281, 2),
QT_MOC_LITERAL(29, 284, 2),
QT_MOC_LITERAL(30, 287, 2),
QT_MOC_LITERAL(31, 290, 7),
QT_MOC_LITERAL(32, 298, 10),
QT_MOC_LITERAL(33, 309, 10),
QT_MOC_LITERAL(34, 320, 4),
QT_MOC_LITERAL(35, 325, 10),
QT_MOC_LITERAL(36, 336, 3),
QT_MOC_LITERAL(37, 340, 11),
QT_MOC_LITERAL(38, 352, 8),
QT_MOC_LITERAL(39, 361, 16),
QT_MOC_LITERAL(40, 378, 4),
QT_MOC_LITERAL(41, 383, 11),
QT_MOC_LITERAL(42, 395, 7),
QT_MOC_LITERAL(43, 403, 2),
QT_MOC_LITERAL(44, 406, 5),
QT_MOC_LITERAL(45, 412, 8)
    },
    "QtAV::VideoDecoderFFmpeg\0skip_loop_filter\0"
    "DiscardType\0skip_idct\0skip_frame\0"
    "threads\0thread_type\0ThreadFlags\0vismv\0"
    "MotionVectorVisFlags\0StrictType\0Very\0"
    "Strict\0Normal\0Unofficial\0Experimental\0"
    "None\0Default\0NoRef\0Bidir\0NoKey\0All\0"
    "ThreadFlag\0DefaultType\0Slice\0Frame\0"
    "MotionVectorVisFlag\0No\0PF\0BF\0BB\0BugFlag\0"
    "autodetect\0xvid_ilace\0ump4\0no_padding\0"
    "amv\0qpel_chroma\0std_qpel\0direct_blocksize\0"
    "edge\0hpel_chroma\0dc_clip\0ms\0trunc\0"
    "BugFlags"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_QtAV__VideoDecoderFFmpeg[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       6,   14, // properties
       8,   32, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // properties: name, type, flags
       1, 0x80000000 | 2, 0x0009500b,
       3, 0x80000000 | 2, 0x0009500b,
       4, 0x80000000 | 2, 0x0009500b,
       5, QMetaType::Int, 0x00095103,
       6, 0x80000000 | 7, 0x0009500b,
       8, 0x80000000 | 9, 0x0009500b,

 // enums: name, flags, count, data
      10, 0x0,    5,   64,
       2, 0x0,    6,   74,
      22, 0x0,    3,   86,
       7, 0x1,    3,   92,
      26, 0x0,    4,   98,
       9, 0x1,    4,  106,
      31, 0x0,   13,  114,
      45, 0x1,   13,  140,

 // enum data: key, value
      11, uint(QtAV::VideoDecoderFFmpeg::Very),
      12, uint(QtAV::VideoDecoderFFmpeg::Strict),
      13, uint(QtAV::VideoDecoderFFmpeg::Normal),
      14, uint(QtAV::VideoDecoderFFmpeg::Unofficial),
      15, uint(QtAV::VideoDecoderFFmpeg::Experimental),
      16, uint(QtAV::VideoDecoderFFmpeg::None),
      17, uint(QtAV::VideoDecoderFFmpeg::Default),
      18, uint(QtAV::VideoDecoderFFmpeg::NoRef),
      19, uint(QtAV::VideoDecoderFFmpeg::Bidir),
      20, uint(QtAV::VideoDecoderFFmpeg::NoKey),
      21, uint(QtAV::VideoDecoderFFmpeg::All),
      23, uint(QtAV::VideoDecoderFFmpeg::DefaultType),
      24, uint(QtAV::VideoDecoderFFmpeg::Slice),
      25, uint(QtAV::VideoDecoderFFmpeg::Frame),
      23, uint(QtAV::VideoDecoderFFmpeg::DefaultType),
      24, uint(QtAV::VideoDecoderFFmpeg::Slice),
      25, uint(QtAV::VideoDecoderFFmpeg::Frame),
      27, uint(QtAV::VideoDecoderFFmpeg::No),
      28, uint(QtAV::VideoDecoderFFmpeg::PF),
      29, uint(QtAV::VideoDecoderFFmpeg::BF),
      30, uint(QtAV::VideoDecoderFFmpeg::BB),
      27, uint(QtAV::VideoDecoderFFmpeg::No),
      28, uint(QtAV::VideoDecoderFFmpeg::PF),
      29, uint(QtAV::VideoDecoderFFmpeg::BF),
      30, uint(QtAV::VideoDecoderFFmpeg::BB),
      32, uint(QtAV::VideoDecoderFFmpeg::autodetect),
      33, uint(QtAV::VideoDecoderFFmpeg::xvid_ilace),
      34, uint(QtAV::VideoDecoderFFmpeg::ump4),
      35, uint(QtAV::VideoDecoderFFmpeg::no_padding),
      36, uint(QtAV::VideoDecoderFFmpeg::amv),
      37, uint(QtAV::VideoDecoderFFmpeg::qpel_chroma),
      38, uint(QtAV::VideoDecoderFFmpeg::std_qpel),
      39, uint(QtAV::VideoDecoderFFmpeg::direct_blocksize),
      40, uint(QtAV::VideoDecoderFFmpeg::edge),
      41, uint(QtAV::VideoDecoderFFmpeg::hpel_chroma),
      42, uint(QtAV::VideoDecoderFFmpeg::dc_clip),
      43, uint(QtAV::VideoDecoderFFmpeg::ms),
      44, uint(QtAV::VideoDecoderFFmpeg::trunc),
      32, uint(QtAV::VideoDecoderFFmpeg::autodetect),
      33, uint(QtAV::VideoDecoderFFmpeg::xvid_ilace),
      34, uint(QtAV::VideoDecoderFFmpeg::ump4),
      35, uint(QtAV::VideoDecoderFFmpeg::no_padding),
      36, uint(QtAV::VideoDecoderFFmpeg::amv),
      37, uint(QtAV::VideoDecoderFFmpeg::qpel_chroma),
      38, uint(QtAV::VideoDecoderFFmpeg::std_qpel),
      39, uint(QtAV::VideoDecoderFFmpeg::direct_blocksize),
      40, uint(QtAV::VideoDecoderFFmpeg::edge),
      41, uint(QtAV::VideoDecoderFFmpeg::hpel_chroma),
      42, uint(QtAV::VideoDecoderFFmpeg::dc_clip),
      43, uint(QtAV::VideoDecoderFFmpeg::ms),
      44, uint(QtAV::VideoDecoderFFmpeg::trunc),

       0        // eod
};

void QtAV::VideoDecoderFFmpeg::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject QtAV::VideoDecoderFFmpeg::staticMetaObject = {
    { &VideoDecoder::staticMetaObject, qt_meta_stringdata_QtAV__VideoDecoderFFmpeg.data,
      qt_meta_data_QtAV__VideoDecoderFFmpeg,  qt_static_metacall, 0, 0}
};


const QMetaObject *QtAV::VideoDecoderFFmpeg::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *QtAV::VideoDecoderFFmpeg::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_QtAV__VideoDecoderFFmpeg.stringdata))
        return static_cast<void*>(const_cast< VideoDecoderFFmpeg*>(this));
    return VideoDecoder::qt_metacast(_clname);
}

int QtAV::VideoDecoderFFmpeg::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = VideoDecoder::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    
#ifndef QT_NO_PROPERTIES
     if (_c == QMetaObject::ReadProperty) {
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< DiscardType*>(_v) = skipLoopFilter(); break;
        case 1: *reinterpret_cast< DiscardType*>(_v) = skipIDCT(); break;
        case 2: *reinterpret_cast< DiscardType*>(_v) = skipFrame(); break;
        case 3: *reinterpret_cast< int*>(_v) = threads(); break;
        case 4: *reinterpret_cast<int*>(_v) = QFlag(threadFlags()); break;
        case 5: *reinterpret_cast<int*>(_v) = QFlag(motionVectorVisFlags()); break;
        default: break;
        }
        _id -= 6;
    } else if (_c == QMetaObject::WriteProperty) {
        void *_v = _a[0];
        switch (_id) {
        case 0: setSkipLoopFilter(*reinterpret_cast< DiscardType*>(_v)); break;
        case 1: setSkipIDCT(*reinterpret_cast< DiscardType*>(_v)); break;
        case 2: setSkipFrame(*reinterpret_cast< DiscardType*>(_v)); break;
        case 3: setThreads(*reinterpret_cast< int*>(_v)); break;
        case 4: setThreadFlags(QFlag(*reinterpret_cast<int*>(_v))); break;
        case 5: setMotionVectorVisFlags(QFlag(*reinterpret_cast<int*>(_v))); break;
        default: break;
        }
        _id -= 6;
    } else if (_c == QMetaObject::ResetProperty) {
        _id -= 6;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 6;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 6;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 6;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 6;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 6;
    } else if (_c == QMetaObject::RegisterPropertyMetaType) {
        if (_id < 6)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 6;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}
QT_END_MOC_NAMESPACE
